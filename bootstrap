# Only run if we're running Ubuntu

if hash lsb_release 2>/dev/null; then
  if test "${Ubuntu#*`lsb_release -i`}" != "Ubuntu"; then
    echo 'detected ubuntu: installing base dependencies'
  else
    echo 'not ubuntu: aborting'
    exit 0
  fi
elif [ -f /etc/debian_version ]; then
  echo 'detected debain: installing base dependencies. WARNING: may not work completely'
else
  echo 'not ubuntu or debian: aborting'
  exit 0
fi

if [ -n $MIN ]; then
	echo 'Minimal install!'
fi

set -e

apt-get update
apt-get upgrade -y
apt-get update

# Install git
apt-get install -y git
git config --global push.default simple

# Install vim
apt-get install -y vim
git config --global core.editor "vim"

# Install Vundle, the VIM package manager
git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim

# Setup rc files
echo " " >> ~/.bashrc
echo "## Source .myConfig files" >> ~/.bashrc
echo "for f in \$HOME/.myConfig/.bash*; do source \$f; done" >> ~/.bashrc

echo " " >> ~/.vimrc
echo "\" Source .myConfig files" >> ~/.vimrc
echo "source \$HOME/.myConfig/.vimrc" >> ~/.vimrc

if [ $MIN ]; then
	echo 'Minimal install done.'
	exit 0
fi

# Install HTOP memory visualization/mgmt
apt-get install -y htop

# Install Heroku Toolbelt
wget -qO- https://toolbelt.heroku.com/install-ubuntu.sh | sh

# Install F.lux - save your eyes
### NOTE: Doesn't support 13.10 yet, install straight from:
###	http://ppa.launchpad.net/kilian/f.lux/ubuntu/pool/main/f/fluxgui/fluxgui_1.1.8_all.deb
# add-apt-repository ppa:kilian/f.lux
# apt-get update
# apt-get -y install fluxgui

# Install Node.js
apt-get install -y nodejs
node --version

# Install NPM
apt-get install -y npm
npm --version

# Install Rails
# [Setup Ruby on Rails on Ubuntu 13.10](http://gorails.com/setup/ubuntu/13.10)
apt-get update
apt-get install -y git-core curl zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev python-software-properties
   
# Install RVM
apt-get install -y libgdbm-dev libncurses5-dev automake libtool bison libffi-dev
curl -L https://get.rvm.io | bash -s stable
source ~/.rvm/scripts/rvm
echo "source ~/.rvm/scripts/rvm" >> ~/.bashrc
rvm install 2.1.3
rvm use 2.1.3 --default
ruby -v
# and tell Rubygems not to install the documentation for each package locally
echo "gem: --no-ri --no-rdoc" > ~/.gemrc

# Install Rails
gem install rails
rails -v

# Install PostgreSQL
sh -c "echo 'deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main' > /etc/apt/sources.list.d/pgdg.list"
wget --quiet -O - http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc | sudo apt-key add -
apt-get update
apt-get install -y postgresql-common
apt-get install -y postgresql-9.3 libpq-dev

## Nvidia drivers
#apt-get install -y nvidia-current

# Install Travis CLI
gem install travis --no-rdoc --no-ri
travis version

# Install Gemfury
gem install gemfury
fury version

# Oh yea, login to Heroku
heroku login

# Force a login to Gemfury
fury list --as flukenetworks

echo "You might also want to install RubyMine, Google Chrome (+Beta), 
exit 0

